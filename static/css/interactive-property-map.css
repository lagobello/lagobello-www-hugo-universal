.map {
    height: 400px;
    width: 100%;
}

.ol-mouse-position{
    top: unset;
    right: unset;
    left: 8px;
    bottom: 10px;
}

.ol-mouse-position span{
    display: block;
    margin: 1px;
    padding: 0;
    color: #fff;
    font-size: 1.0em;
    background-color: rgba(0,60,136,.5);
    border: none;
    border-radius: 2px;

}

.ol-rotate {
    right: 50px
}

.layer-switcher button {
    background-color: rgba(0,60,136,.5);
}

.layer-switcher .panel {
    background-color: rgba(255,255,255,.9);
}

.ol-popup {
  position: absolute;
  background-color: white;
  -webkit-filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));
  filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));
  padding: 15px;
  border-radius: 10px;
  border: 1px solid #cccccc;
  bottom: 12px;
  left: -50px;
  min-width: 280px;
}
.ol-popup:after, .ol-popup:before {
  top: 100%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none;
}
.ol-popup:after {
  border-top-color: white;
  border-width: 10px;
  left: 48px;
  margin-left: -10px;
}
.ol-popup:before {
  border-top-color: #cccccc;
  border-width: 11px;
  left: 48px;
  margin-left: -11px;
}
.ol-popup-closer {
  text-decoration: none;
  position: absolute;
  top: 2px;
  right: 8px;
}
.ol-popup-closer:after {
  content: "âœ–";
}

#lot-table {
  height: 300px;
  overflow:auto;
}

.lot-table {
  font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
  border-collapse: collapse;
  height: 200px;
  overflow:auto;
}

.lot-table td, .lot-table th {
  border: 1px solid #ddd;
  padding: 8px;
}

.lot-table tr:nth-child(even){background-color: #f2f2f2;}

.lot-table tr:hover {background-color: #ddd;}

.lot-table th {
  padding-top: 12px;
  padding-bottom: 12px;
  text-align: left;
  background-color: rgba(0,60,136,.7);
  color: white;
}

.ol-tooltip {
  position: relative;
  background: rgba(0, 0, 0, 0.5);
  border-radius: 4px;
  color: white;
  padding: 4px 8px;
  opacity: 0.7;
  white-space: nowrap;
  font-size: 12px;
}
.ol-tooltip-measure {
  opacity: 1;
  font-weight: bold;
}
.ol-tooltip-static {
  background-color: #ffcc33;
  color: black;
  border: 1px solid white;
}
.ol-tooltip-measure:before,
.ol-tooltip-static:before {
  border-top: 6px solid rgba(0, 0, 0, 0.5);
  border-right: 6px solid transparent;
  border-left: 6px solid transparent;
  content: "";
  position: absolute;
  bottom: -6px;
  margin-left: -7px;
  left: 50%;
}
.ol-tooltip-static:before {
  border-top-color: #ffcc33;
}

/* REMOVED old .ol-tool-control styles */

/* Styling for OpenLayers controls to achieve default OL look */

/* Targeting the specific OL container for top-left controls */
.ol-zoom.ol-unselectable.ol-control, /* Default OL Zoom in top-left */
.ol-info-control.ol-unselectable.ol-control,
.ol-length-control.ol-unselectable.ol-control,
.ol-area-control.ol-unselectable.ol-control,
.ol-unit-toggle-control.ol-unselectable.ol-control {
  /* These are individual controls. OL places them in a default top-left container. */
  /* We need to make that container a flex column. */
  /* Let's assume they share a common direct parent that is the top-left group. */
  /* This is hard to target without seeing OL's exact DOM structure for grouping. */
  /* As a fallback, we can use absolute positioning with calc for each. */
  /* However, the request is to try flexbox on the parent first. */

  /* The following styles apply to each control block in the top-left column */
   margin-bottom: 5px !important; /* Space between controls in the column */
}

/* Attempt to make the OL default top-left control group a flex column */
/* This selector might need to be very specific to OL's generated HTML structure */
/* A common pattern: .ol-overlaycontainer-stopevent > div that holds top-left controls */
/* If .ol-zoom is the first such control, its parent might be targetable. */
/* This is a best-guess selector for the container of top-left controls */
.ol-overlaycontainer-stopevent > .ol-control-container-top-left, /* Ideal if OL uses this class */
.ol-overlaycontainer-stopevent > div:has(>.ol-zoom) { /* More generic: a div parent of .ol-zoom */
    display: flex !important;
    flex-direction: column !important;
    align-items: flex-start !important; /* Align items to the start */
    top: .5em !important;
    left: .5em !important;
    width: auto !important; /* Let content determine width */
    background-color: transparent !important; /* Container itself is transparent */
}


/* General style for each control block (Zoom, Info, Length, Area, UnitToggle) */
/* OL controls are typically positioned absolutely by OL itself. We style their appearance. */
.ol-control {
  background-color: rgba(255, 255, 255, 0.4); /* Default OL light background */
  border-radius: 4px;
  padding: 2px;
}
.ol-control:hover {
    background-color: rgba(255,255,255,0.6);
}

/* Buttons within ANY .ol-control (custom or default like zoom) */
.ol-control button {
  background-color: transparent;
  color: black;
  font-family: 'Arial', sans-serif;
  font-size: 1.14em; /* Matches OL default */
  font-weight: bold;
  text-decoration: none;
  text-align: center;
  height: 1.375em;
  width: 1.375em;
  line-height: 1.375em;
  margin: 1px;
  border: none;
  border-radius: 2px;
  padding: 0;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}

.ol-control button:hover {
  background-color: rgba(0, 0, 0, 0.15); /* OL default hover is often a slightly darker background */
}

.ol-control button.active {
  background-color: rgba(0, 60, 136, 0.7); /* Using a blue similar to an active state seen before, can adjust to OL default */
  color: white; /* Text color for active button often contrasts with background */
}

/* OL Zoom control buttons are often just text +/- */
.ol-zoom button {
    font-weight: bold;
}

/* UnitToggleControl specific layout and button styling */
.ol-unit-toggle-control {
  display: flex;
  flex-direction: column; /* Stack Imperial over Metric */
  /* background-color will be inherited from .ol-control */
}

.ol-unit-toggle-control button {
  width: auto; /* Allow text and emoji to determine width */
  padding: 0 0.5em;
  justify-content: flex-start; /* Align text/emoji to the left */
  /* height and line-height can be inherited or slightly adjusted if needed for text */
  font-size: 0.9em; /* Slightly smaller text for unit toggle is common */
  font-weight: normal; /* Text buttons are often not bold */
}

/* Styling for the Mouse Position (Cursor Position) control */
.ol-mouse-position {
  /* Inherits .ol-control for background, padding, border-radius if it has that class. */
  /* If not, or to ensure consistency: */
  background-color: rgba(255, 255, 255, 0.4) !important; /* Default OL light background */
  border-radius: 4px !important;
  padding: 3px 5px !important; /* Typical padding for text-based controls */
  color: black !important; /* Text color */
  font-size: 0.85em !important; /* OL default mouse position font size is often smaller */
  /* Its default position is bottom-center, which is fine. */
  /* Remove any custom background from its internal span if it exists from old styles */
}
.ol-mouse-position span { /* If spans inside have their own conflicting styles */
    background-color: transparent !important;
    color: black !important;
    border: none !important;
    padding: 0 2px !important; /* Minimal padding between coordinate parts */
}


/* Layer Switcher specific styling */
.layer-switcher, .ol-layerswitcher { /* ol-layerswitcher is the common class name */
  /* Basic .ol-control styling (background, border-radius) should be inherited if it has .ol-control class */
  /* If not, we might need to add it here, or ensure the main element gets .ol-control */
  /* Assuming it's an .ol-control, so background and padding are handled. */
  /* Ensure its button is sized correctly and styled */
}

.layer-switcher button, .ol-layerswitcher button {
  /* Should inherit from general .ol-control button for: */
  /* - color: black */
  /* - font-family, font-size (base), font-weight (base) */
  /* - border, border-radius, padding (0), margin (1px) */
  /* - display: flex, align-items: center, justify-content: center */
  /* - cursor: pointer */
  /* Ensure dimensions are consistent with other icon buttons */
  width: 1.375em !important; /* Standard OL button width */
  height: 1.375em !important; /* Standard OL button height */
  line-height: 1.375em !important; /* For icon centering if not using flex */
  background-color: transparent !important; /* Explicitly ensure this if OL default has its own button bg */
}
/* The panel itself needs to be styled if it's not already */
.layer-switcher .panel, .ol-layerswitcher .panel {
    background-color: rgba(255,255,255,0.9) !important; /* Light background for panel */
    border: 1px solid #ccc !important;
    color: black !important; /* Text color within panel */
}


/* Custom Tracking Control Styles */
.tracking-control { /* This is an .ol-control, so it inherits some base styles */
  top: .5em; /* Keep its original position if desired, or adjust */
  right: 7em;
  left: auto;
  /* background-color is inherited from .ol-control general style (rgba(255,255,255,0.4)) */
  /* border-radius is inherited */
  /* padding is inherited or can be set to 0 if buttons fill it */
  padding: 2px; /* Consistent with other .ol-control */
  box-shadow: none; /* OL controls typically don't have shadow */
  display: flex;
  align-items: center;
}

.tracking-control button {
  /* This button should now inherit from the general .ol-control button style: */
  /* - background-color: transparent */
  /* - color: black */
  /* - dimensions, border-radius, etc. */
  /* We might only need to override specifics if they differ, e.g., emoji size or if it's not bold */
  font-size: 1.2em; /* Retain larger emoji size for this specific button if desired */
  /* padding: 4px; /* This was specific, check if new general button style is enough */
  /* margin: 1px; /* General button style has this */
  /* order: 2; /* If stats are still to its left */
}

/* Hover and active states will be inherited from general .ol-control button:hover and button.active */

.tracking-stats {
  display: flex; /* This is set by JS, but good to have as default if ever shown by CSS */
  flex-direction: row; /* Stats in a row */
  align-items: center; /* Align stat items */
  background-color: rgba(255,255,255,0.8); /* Background for stats area */
  padding: 3px 8px;
  border-radius: 4px;
  margin-right: 0px; /* No margin needed if button has margin-left */
  order: 1; /* Stats will be on the left */
  box-shadow: 0 0 5px rgba(0,0,0,0.2); /* Add shadow to stats block */
}

.tracking-stats div { /* Individual stat item */
  padding: 2px 5px;
  font-size: 0.75em; /* Slightly smaller font for stats */
  color: #333;
  white-space: nowrap; /* Prevent wrapping of individual stat lines */
}

.tracking-stats div:not(:last-child) {
  border-right: 1px solid #ccc; /* Separator lines */
}